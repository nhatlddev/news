@import "_variable";
@import "_maps";
@import "_mixin";
@import "_spacing";

@import "../../vendor/bootstrap-icons-1.11.3/font/bootstrap-icons.min.css";

@each $display in $display-utilities {
	.d-#{$display} {
		display: $display;
	}

	@each $breakpoint, $breakpoint-value in $breakpoints {
		.d-#{$breakpoint}-#{$display} {
			@include generate-display-utilities($breakpoint-value, $display);
		}
	}
}

@each $justify, $value in $justify-values {
	.justify-content-#{$justify} {
		justify-content: $value;
	}

	@each $breakpoint, $breakpoint-value in $breakpoints {
		.justify-content-#{$breakpoint}-#{$justify} {
			@include generate-justify-utilities($breakpoint-value, $value);
		}
	}
}

@each $width-key, $width-value in $width-utilities {
	.w-#{$width-key} {
		width: $width-value;
	}

	@each $breakpoint, $breakpoint-value in $breakpoints {
		.w-#{$breakpoint}-#{$width-key} {
			@include generate-width-utilities($breakpoint-value, $width-value);
		}
	}
}

@each $gap-key, $gap-value in $gap-utilities {
	// All gap
	.gap-#{$gap-key} {
		gap: $gap-value;
	}

	// Row gap
	.row-gap-#{$gap-key} {
		row-gap: $gap-value;
	}

	// Column gap
	.col-gap-#{$gap-key} {
		column-gap: $gap-value;
	}

	// Responsive gap classes
	@each $breakpoint, $breakpoint-value in $breakpoints {
		// All gap
		.gap-#{$breakpoint}-#{$gap-key} {
			@include generate-gap-utilities($breakpoint-value, $gap-value, all);
		}

		// Row gap
		.row-gap-#{$breakpoint}-#{$gap-key} {
			@include generate-gap-utilities($breakpoint-value, $gap-value, row);
		}

		// Column gap
		.col-gap-#{$breakpoint}-#{$gap-key} {
			@include generate-gap-utilities($breakpoint-value, $gap-value, column);
		}
	}
}

@each $direction in $flex-directions {
	.flex-#{$direction} {
		flex-direction: $direction;
	}

	// Responsive flex-direction classes
	@each $breakpoint, $breakpoint-value in $breakpoints {
		.flex-#{$breakpoint}-#{$direction} {
			@include generate-flex-direction($breakpoint-value, $direction);
		}
	}
}

@each $alignment in $text-alignments {
	.text-#{$alignment} {
		text-align: $alignment;
	}

	// Responsive text alignment classes
	@each $breakpoint, $breakpoint-value in $breakpoints {
		.text-#{$alignment}-#{$breakpoint} {
			@include generate-text-alignment($breakpoint-value, $alignment);
		}
	}
}

.pagination > .active > a,
.pagination > .active > a:focus,
.pagination > .active > a:hover,
.pagination > .active > span,
.pagination > .active > span:focus,
.pagination > .active > span:hover {
	z-index: 3;
	color: #fff;
	cursor: default;
	background-color: $primary;
	border-color: $primary;
}

.text-wrap {
	white-space: normal;
	word-wrap: break-word;
	word-break: break-word;
}

.text-nowrap {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.text-break {
	word-wrap: break-word;
	word-break: break-all;
}

.select2-container .select2-selection--single {
    height: 34px; 
    padding: 6px 12px; 
    font-size: 14px;
    line-height: 1.42857143;
    color: #555;
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
}

.select2-container .select2-selection--single:focus {
    border-color: #66afe9;
    outline: 0;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
}

.select2-container--default .select2-selection--single .select2-selection__arrow {
    height: 34px;
    right: 10px;
}

.select2-container--default .select2-selection--single .select2-selection__placeholder {
    color: #aaa;
}

.select2-container .select2-dropdown {
    border-radius: 0; 
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
}

.select2-container--default .select2-results__option--highlighted[aria-selected] {
    background-color: #337ab7;
    color: white;
}

.swal-large-popup {
    width: 500px !important; 
    height: auto !important;
    // padding: 20px !important; 
}

.swal-large-title {
    font-size: 35px !important; 
}

.swal-large-content {
    font-size: 25px !important; 
}

.swal-large-button {
    font-size: large;
    background-color: $primary;
}

.text {
    &-primary {
        color: $primary !important;
    }

    &-dark {
        color: $dark;
    }
    
}

.nav-tabs>li.active>a, .nav-tabs>li.active>a:focus, .nav-tabs>li.active>a:hover {
    color: $primary;
    cursor: default;
    font-weight: bold;
    background-color: #fff;
    border: 1px solid #ddd;
    border-bottom-color: transparent;
}

